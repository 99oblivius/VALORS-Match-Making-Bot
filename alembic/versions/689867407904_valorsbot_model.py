"""ValorsBot model

Revision ID: 689867407904
Revises: dff70f081043
Create Date: 2024-06-28 11:00:06.224885

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '689867407904'
down_revision: Union[str, None] = 'dff70f081043'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('rcon_servers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('host', sa.String(length=45), nullable=False),
    sa.Column('port', sa.Integer(), nullable=False),
    sa.Column('password', sa.Text(), nullable=False),
    sa.Column('region', sa.String(length=32), nullable=False),
    sa.Column('being_used', sa.Boolean(), nullable=False),
    sa.Column('timestamp', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('host', 'port', name='unique_host_port')
    )
    op.create_table('mm_bot_user_abandons',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('guild_id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('timestamp', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['guild_id', 'user_id'], ['mm_bot_users.guild_id', 'mm_bot_users.user_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('mm_bot_user_aggregate_stats',
    sa.Column('guild_id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('games', sa.Integer(), nullable=True),
    sa.Column('wins', sa.Integer(), nullable=True),
    sa.Column('losses', sa.Integer(), nullable=True),
    sa.Column('abandons', sa.Integer(), nullable=True),
    sa.Column('ct_starts', sa.Integer(), nullable=True),
    sa.Column('top_score', sa.Integer(), nullable=True),
    sa.Column('top_kills', sa.Integer(), nullable=True),
    sa.Column('top_assists', sa.Integer(), nullable=True),
    sa.Column('total_score', sa.Integer(), nullable=True),
    sa.Column('total_kills', sa.Integer(), nullable=True),
    sa.Column('total_deaths', sa.Integer(), nullable=True),
    sa.Column('total_assists', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['guild_id', 'user_id'], ['mm_bot_users.guild_id', 'mm_bot_users.user_id'], ),
    sa.PrimaryKeyConstraint('guild_id', 'user_id')
    )
    op.create_table('mm_bot_user_match_stats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('guild_id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('match_id', sa.Integer(), nullable=False),
    sa.Column('mmr', sa.Integer(), nullable=False),
    sa.Column('games', sa.Integer(), nullable=True),
    sa.Column('win', sa.Boolean(), nullable=True),
    sa.Column('ct_start', sa.Boolean(), nullable=True),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.Column('kills', sa.Integer(), nullable=True),
    sa.Column('deaths', sa.Integer(), nullable=True),
    sa.Column('assists', sa.Integer(), nullable=True),
    sa.Column('ping', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['guild_id', 'user_id'], ['mm_bot_users.guild_id', 'mm_bot_users.user_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('mm_bot_mmr_history')
    with op.batch_alter_table('mm_bot_maps', schema=None) as batch_op:
        batch_op.add_column(sa.Column('resource_id', sa.String(length=32), nullable=True))

    with op.batch_alter_table('mm_bot_matches', schema=None) as batch_op:
        batch_op.add_column(sa.Column('serveraddr', sa.String(length=51), nullable=True))

    with op.batch_alter_table('mm_bot_users', schema=None) as batch_op:
        batch_op.drop_column('loss')
        batch_op.drop_column('games')
        batch_op.drop_column('mmr')
        batch_op.drop_column('wins')
        batch_op.drop_column('team_a')

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('mm_bot_users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('team_a', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('wins', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('mmr', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('games', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('loss', sa.INTEGER(), autoincrement=False, nullable=True))

    with op.batch_alter_table('mm_bot_matches', schema=None) as batch_op:
        batch_op.drop_column('serveraddr')

    with op.batch_alter_table('mm_bot_maps', schema=None) as batch_op:
        batch_op.drop_column('resource_id')

    op.create_table('mm_bot_mmr_history',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('guild_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('mmr', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('mmr_delta', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['guild_id', 'user_id'], ['mm_bot_users.guild_id', 'mm_bot_users.user_id'], name='mm_bot_mmr_history_guild_id_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='mm_bot_mmr_history_pkey')
    )
    op.drop_table('mm_bot_user_match_stats')
    op.drop_table('mm_bot_user_aggregate_stats')
    op.drop_table('mm_bot_user_abandons')
    op.drop_table('rcon_servers')
    # ### end Alembic commands ###
